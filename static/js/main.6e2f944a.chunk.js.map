{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Button/Button.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","Button","option","onLeaveFeedback","button","onClick","FeedbackOptions","options","arrOptions","Object","keys","list","map","list__item","Statistics","good","neutral","bad","total","positivePercentage","feedback","Notification","message","App","state","gainFeedback","setState","prevState","totalFeedback","values","countPositiveFeedbackPercentage","goodFeedbacks","Number","toFixed","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e2f944a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3PVIg\",\"feedback\":\"Statistics_feedback__2-2c_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2lRUp\",\"list__item\":\"FeedbackOptions_list__item__1trxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","import styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Section ({ title, children })  {\n\n    return (\n        <div className={styles.section}>\n            <h2 className={styles.title}>{title}</h2>\n            {children}\n        </div>\n    );\n};\n\nSection.defaultProps = {\n    title: 'Waiting for answers :)'\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n}","import styles from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button ({ option, onLeaveFeedback }) {\n    const increaseFeedback = () => onLeaveFeedback(option);\n\n    return (\n        <button \n        className={styles.button}\n        onClick={increaseFeedback}\n        >\n        {option}\n        </button>\n    );\n};\n\nButton.defaultProps ={\n    option: 'button',\n}\n\nButton.propTypes = {\n    option: PropTypes.string,\n    onLeaveFeedback: PropTypes.func.isRequired,\n}","import Button from '../Button';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions ({ options, onLeaveFeedback }) {\n    const arrOptions = Object.keys(options);\n\n    return (\n        <ul className={styles.list}>\n            {arrOptions.map(option => {\n                return (\n                    <li \n                        key={option}\n                        className={styles.list__item}>\n                        <Button \n                        option={option}\n                        onLeaveFeedback={onLeaveFeedback}\n                        />\n                    </li>\n                )\n            })}   \n        </ul>\n    );\n};\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.object.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n}","import styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics ({good, neutral, bad, total, positivePercentage }) {\n    \n    return (\n        <>\n        <h2 className={styles.title}>Statistic</h2>\n        <p className={styles.feedback}>Good: {good}</p>\n        <p className={styles.feedback}>Neurtral: {neutral}</p>\n        <p className={styles.feedback}>Bad: {bad}</p>\n        <p className={styles.feedback}>Total: {total}</p>\n        <p className={styles.feedback}>Positive feedback: {positivePercentage} %</p>\n        </>\n    );\n};\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n}\n","import styles from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Notification ({ message }) {\n    return (\n        <p className={styles.message}>{message}</p>\n    );\n};\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n}","import { Component } from 'react';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\n\nclass App extends Component {\n\n  state ={\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  gainFeedback = option => {\n    this.setState(prevState => ({ [option]: prevState[option] +1 }))\n  }\n\n  totalFeedback = () => {\n    const stateValues = Object.values(this.state);\n    let total = 0;\n\n    for(const value of stateValues) {\n      total += value;\n    }\n    return total;\n  }\n  countPositiveFeedbackPercentage = () => {\n    const goodFeedbacks = this.state.good;\n    const total = this.totalFeedback();\n    const percentage = (goodFeedbacks / total) * 100;\n\n    if(goodFeedbacks === 0) {\n      return 0;\n    }\n\n    return Number(percentage.toFixed(1));\n  }\n\n\n  render() {\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions \n        options={this.state} \n        onLeaveFeedback={this.gainFeedback}\n        />\n        {this.totalFeedback() === 0 ? \n        <Notification message=\"No feedback given\"/> :\n        <Statistics \n        good={this.state.good} \n        neutral={this.state.neutral} \n        bad={this.state.bad} \n        total={this.totalFeedback()} \n        positivePercentage={this.countPositiveFeedbackPercentage()} />\n        }\n      </Section>\n      \n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}